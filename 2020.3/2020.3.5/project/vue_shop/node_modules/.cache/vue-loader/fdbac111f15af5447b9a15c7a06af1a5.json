{"remainingRequest":"D:\\code\\2020.3\\2020.3.5\\project\\vue_shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\2020.3\\2020.3.5\\project\\vue_shop\\src\\components\\report\\Report.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\2020.3\\2020.3.5\\project\\vue_shop\\src\\components\\report\\Report.vue","mtime":1583835753778},{"path":"D:\\code\\2020.3\\2020.3.5\\project\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1583410253566},{"path":"D:\\code\\2020.3\\2020.3.5\\project\\vue_shop\\node_modules\\babel-loader\\lib\\index.js","mtime":1583410253571},{"path":"D:\\code\\2020.3\\2020.3.5\\project\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1583410253566},{"path":"D:\\code\\2020.3\\2020.3.5\\project\\vue_shop\\node_modules\\vue-loader\\lib\\index.js","mtime":1582785722020}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQovLyDlr7zlhaVlY2hhcnRzDQppbXBvcnQgZWNoYXJ0cyBmcm9tICdlY2hhcnRzJw0KaW1wb3J0IF8gZnJvbSAnbG9kYXNoJw0KZXhwb3J0IGRlZmF1bHQgew0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICAvLyDpnIDopoHlkIjlubbnmoTmlbDmja4NCiAgICAgIG9wdGlvbnM6IHsNCiAgICAgICAgdGl0bGU6IHsNCiAgICAgICAgICB0ZXh0OiAn55So5oi35p2l5rqQJw0KICAgICAgICB9LA0KICAgICAgICB0b29sdGlwOiB7DQogICAgICAgICAgdHJpZ2dlcjogJ2F4aXMnLA0KICAgICAgICAgIGF4aXNQb2ludGVyOiB7DQogICAgICAgICAgICB0eXBlOiAnY3Jvc3MnLA0KICAgICAgICAgICAgbGFiZWw6IHsNCiAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnI0U5RUVGMycNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9LA0KICAgICAgICAgIGdyaWQ6IHsNCiAgICAgICAgICAgIGxlZnQ6ICIzJSIsDQogICAgICAgICAgICByaWdodDogIjQlIiwNCiAgICAgICAgICAgIGJvdHRvbTogIjMlIiwNCiAgICAgICAgICAgIGNvbnRhaW5MYWJlbDogdHJ1ZQ0KICAgICAgICAgIH0sDQogICAgICAgICAgeEF4aXM6IFsNCiAgICAgICAgICAgIHsgYm91bmRhcnlHYXA6IGZhbHNlIH0NCiAgICAgICAgICBdLA0KICAgICAgICAgIHlBeGlzOiBbDQogICAgICAgICAgICB7IHR5cGU6ICd2YWx1ZScgfQ0KICAgICAgICAgIF0NCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0NCiAgfSwNCiAgY3JlYXRlZCgpIHt9LA0KICBhc3luYyBtb3VudGVkKCkgew0KICAgIHZhciBteUNoYXJ0ID0gZWNoYXJ0cy5pbml0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYWluJykpDQogICAgLy8g6K+35rGC6KGo5qC85pWw5o2uDQogICAgY29uc3QgeyBkYXRhOiByZXMgfSA9IGF3YWl0IHRoaXMuJGh0dHAuZ2V0KCcvYXBpL3ByaXZhdGUvdjEvcmVwb3J0cy90eXBlLzEnKQ0KICAgIGlmIChyZXMubWV0YS5zdGF0dXMgIT09IDIwMCkgew0KICAgICAgcmV0dXJuIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+iOt+WPluaKpeihqOaVsOaNruWksei0pScpDQogICAgfQ0KICAgIC8vIOWHhuWkh+aVsOaNruWSjOmFjee9rumhuQ0KICAgIGNvbnN0IHJlc3VsdCA9IF8ubWVyZ2UocmVzLmRhdGEsIHRoaXMub3B0aW9ucykNCiAgICBteUNoYXJ0LnNldE9wdGlvbihyZXN1bHQpDQogIH0sDQogIG1ldGhvZHM6IHt9DQp9DQo="},{"version":3,"sources":["Report.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Report.vue","sourceRoot":"src/components/report","sourcesContent":["<template>\r\n  <div>\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>数据管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>订单列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <el-card>\r\n      <div id=\"main\" style=\"width: 600px; height: 400px;\"></div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 导入echarts\r\nimport echarts from 'echarts'\r\nimport _ from 'lodash'\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 需要合并的数据\r\n      options: {\r\n        title: {\r\n          text: '用户来源'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n              backgroundColor: '#E9EEF3'\r\n            }\r\n          },\r\n          grid: {\r\n            left: \"3%\",\r\n            right: \"4%\",\r\n            bottom: \"3%\",\r\n            containLabel: true\r\n          },\r\n          xAxis: [\r\n            { boundaryGap: false }\r\n          ],\r\n          yAxis: [\r\n            { type: 'value' }\r\n          ]\r\n        }\r\n      }\r\n    }\r\n  },\r\n  created() {},\r\n  async mounted() {\r\n    var myChart = echarts.init(document.getElementById('main'))\r\n    // 请求表格数据\r\n    const { data: res } = await this.$http.get('/api/private/v1/reports/type/1')\r\n    if (res.meta.status !== 200) {\r\n      return this.$message.error('获取报表数据失败')\r\n    }\r\n    // 准备数据和配置项\r\n    const result = _.merge(res.data, this.options)\r\n    myChart.setOption(result)\r\n  },\r\n  methods: {}\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n</style>\r\n"]}]}