{"remainingRequest":"D:\\code\\2020.3\\2020.3.5\\project\\vue_shop\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\2020.3\\2020.3.5\\project\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\code\\2020.3\\2020.3.5\\project\\vue_shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\2020.3\\2020.3.5\\project\\vue_shop\\src\\components\\report\\Report.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\2020.3\\2020.3.5\\project\\vue_shop\\src\\components\\report\\Report.vue","mtime":1583835753778},{"path":"D:\\code\\2020.3\\2020.3.5\\project\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1583410253566},{"path":"D:\\code\\2020.3\\2020.3.5\\project\\vue_shop\\node_modules\\babel-loader\\lib\\index.js","mtime":1583410253571},{"path":"D:\\code\\2020.3\\2020.3.5\\project\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1583410253566},{"path":"D:\\code\\2020.3\\2020.3.5\\project\\vue_shop\\node_modules\\vue-loader\\lib\\index.js","mtime":1582785722020}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRDpcXGNvZGVcXDIwMjAuM1xcMjAyMC4zLjVcXHByb2plY3RcXHZ1ZV9zaG9wXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8g5a+85YWlZWNoYXJ0cwppbXBvcnQgZWNoYXJ0cyBmcm9tICdlY2hhcnRzJzsKaW1wb3J0IF8gZnJvbSAnbG9kYXNoJzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvLyDpnIDopoHlkIjlubbnmoTmlbDmja4KICAgICAgb3B0aW9uczogewogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICB0ZXh0OiAn55So5oi35p2l5rqQJwogICAgICAgIH0sCiAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgdHJpZ2dlcjogJ2F4aXMnLAogICAgICAgICAgYXhpc1BvaW50ZXI6IHsKICAgICAgICAgICAgdHlwZTogJ2Nyb3NzJywKICAgICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjRTlFRUYzJwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgZ3JpZDogewogICAgICAgICAgICBsZWZ0OiAiMyUiLAogICAgICAgICAgICByaWdodDogIjQlIiwKICAgICAgICAgICAgYm90dG9tOiAiMyUiLAogICAgICAgICAgICBjb250YWluTGFiZWw6IHRydWUKICAgICAgICAgIH0sCiAgICAgICAgICB4QXhpczogW3sKICAgICAgICAgICAgYm91bmRhcnlHYXA6IGZhbHNlCiAgICAgICAgICB9XSwKICAgICAgICAgIHlBeGlzOiBbewogICAgICAgICAgICB0eXBlOiAndmFsdWUnCiAgICAgICAgICB9XQogICAgICAgIH0KICAgICAgfQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7fSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgbXlDaGFydCwgX3JlZiwgcmVzLCByZXN1bHQ7CgogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgbXlDaGFydCA9IGVjaGFydHMuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFpbicpKTsgLy8g6K+35rGC6KGo5qC85pWw5o2uCgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBfdGhpcy4kaHR0cC5nZXQoJy9hcGkvcHJpdmF0ZS92MS9yZXBvcnRzL3R5cGUvMScpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIF9yZWYgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIHJlcyA9IF9yZWYuZGF0YTsKCiAgICAgICAgICAgICAgaWYgKCEocmVzLm1ldGEuc3RhdHVzICE9PSAyMDApKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNzsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgX3RoaXMuJG1lc3NhZ2UuZXJyb3IoJ+iOt+WPluaKpeihqOaVsOaNruWksei0pScpKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAvLyDlh4blpIfmlbDmja7lkozphY3nva7pobkKICAgICAgICAgICAgICByZXN1bHQgPSBfLm1lcmdlKHJlcy5kYXRhLCBfdGhpcy5vcHRpb25zKTsKICAgICAgICAgICAgICBteUNoYXJ0LnNldE9wdGlvbihyZXN1bHQpOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgbWV0aG9kczoge30KfTs="},{"version":3,"sources":["Report.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAcA;AACA,OAAA,OAAA,MAAA,SAAA;AACA,OAAA,CAAA,MAAA,QAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA;AACA,MAAA,OAAA,EAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA;AADA,SADA;AAIA,QAAA,OAAA,EAAA;AACA,UAAA,OAAA,EAAA,MADA;AAEA,UAAA,WAAA,EAAA;AACA,YAAA,IAAA,EAAA,OADA;AAEA,YAAA,KAAA,EAAA;AACA,cAAA,eAAA,EAAA;AADA;AAFA,WAFA;AAQA,UAAA,IAAA,EAAA;AACA,YAAA,IAAA,EAAA,IADA;AAEA,YAAA,KAAA,EAAA,IAFA;AAGA,YAAA,MAAA,EAAA,IAHA;AAIA,YAAA,YAAA,EAAA;AAJA,WARA;AAcA,UAAA,KAAA,EAAA,CACA;AAAA,YAAA,WAAA,EAAA;AAAA,WADA,CAdA;AAiBA,UAAA,KAAA,EAAA,CACA;AAAA,YAAA,IAAA,EAAA;AAAA,WADA;AAjBA;AAJA;AAFA,KAAA;AA6BA,GA/BA;AAgCA,EAAA,OAhCA,qBAgCA,CAAA,CAhCA;AAiCA,EAAA,OAjCA,qBAiCA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA,cAAA,OADA,GACA,OAAA,CAAA,IAAA,CAAA,QAAA,CAAA,cAAA,CAAA,MAAA,CAAA,CADA,EAEA;;AAFA;AAAA,qBAGA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA,gCAAA,CAHA;;AAAA;AAAA;AAGA,cAAA,GAHA,QAGA,IAHA;;AAAA,oBAIA,GAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAJA;AAAA;AAAA;AAAA;;AAAA,+CAKA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,UAAA,CALA;;AAAA;AAOA;AACA,cAAA,MARA,GAQA,CAAA,CAAA,KAAA,CAAA,GAAA,CAAA,IAAA,EAAA,KAAA,CAAA,OAAA,CARA;AASA,cAAA,OAAA,CAAA,SAAA,CAAA,MAAA;;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,GA3CA;AA4CA,EAAA,OAAA,EAAA;AA5CA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>数据管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>订单列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <el-card>\r\n      <div id=\"main\" style=\"width: 600px; height: 400px;\"></div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 导入echarts\r\nimport echarts from 'echarts'\r\nimport _ from 'lodash'\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 需要合并的数据\r\n      options: {\r\n        title: {\r\n          text: '用户来源'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n              backgroundColor: '#E9EEF3'\r\n            }\r\n          },\r\n          grid: {\r\n            left: \"3%\",\r\n            right: \"4%\",\r\n            bottom: \"3%\",\r\n            containLabel: true\r\n          },\r\n          xAxis: [\r\n            { boundaryGap: false }\r\n          ],\r\n          yAxis: [\r\n            { type: 'value' }\r\n          ]\r\n        }\r\n      }\r\n    }\r\n  },\r\n  created() {},\r\n  async mounted() {\r\n    var myChart = echarts.init(document.getElementById('main'))\r\n    // 请求表格数据\r\n    const { data: res } = await this.$http.get('/api/private/v1/reports/type/1')\r\n    if (res.meta.status !== 200) {\r\n      return this.$message.error('获取报表数据失败')\r\n    }\r\n    // 准备数据和配置项\r\n    const result = _.merge(res.data, this.options)\r\n    myChart.setOption(result)\r\n  },\r\n  methods: {}\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n</style>\r\n"],"sourceRoot":"src/components/report"}]}