{"remainingRequest":"D:\\code\\2020.3\\2020.3.5\\project\\vue_shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\2020.3\\2020.3.5\\project\\vue_shop\\src\\components\\goods\\Params.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\2020.3\\2020.3.5\\project\\vue_shop\\src\\components\\goods\\Params.vue","mtime":1583693949574},{"path":"D:\\code\\2020.3\\2020.3.5\\project\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1583410253566},{"path":"D:\\code\\2020.3\\2020.3.5\\project\\vue_shop\\node_modules\\babel-loader\\lib\\index.js","mtime":1583410253571},{"path":"D:\\code\\2020.3\\2020.3.5\\project\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1583410253566},{"path":"D:\\code\\2020.3\\2020.3.5\\project\\vue_shop\\node_modules\\vue-loader\\lib\\index.js","mtime":1582785722020}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Params.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"Params.vue","sourceRoot":"src/components/goods","sourcesContent":["<template>\r\n  <div>\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>参数列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片视图 -->\r\n    <el-card>\r\n      <!-- 头部的警告区域 -->\r\n      <el-alert show-icon title=\"注意！只允许为第三级商品添加参数!\" :closable=\"false\" type=\"warning\"></el-alert>\r\n      <!-- 选择商品分类的区域 -->\r\n      <el-row style=\"margin: 15px 0\">\r\n        <el-col>\r\n          <span>选择商品分类：</span>\r\n          <!-- 选择商品分类的级联选择框 -->\r\n          <el-cascader\r\n            :options=\"catelist\"\r\n            :props=\"{expandTrigger:'hover',value:'cat_id', label:'cat_name', children:'children'}\"\r\n            v-model=\"selectedCateKeys\"\r\n            @change=\"handleChange\"\r\n            clearable\r\n            change-on-select\r\n          ></el-cascader>\r\n        </el-col>\r\n      </el-row>\r\n      <!-- tab页签区域 -->\r\n      <el-tabs v-model=\"activeName\" @tab-click=\"handleTabClick\">\r\n        <!-- 添加动态参数的面板 -->\r\n        <el-tab-pane label=\"动态参数\" name=\"many\">\r\n          <el-button :disabled=\"isBtnDisabled\" type=\"primary\" @click=\"addDialogVisible = true\">添加参数</el-button>\r\n          <!-- 动态参数表格 -->\r\n          <el-table :data=\"manyTableData\" border stripe>\r\n            <el-table-column type=\"expand\">\r\n              <template v-slot=\"scope\">\r\n                <!-- 循环渲染tag标签 -->\r\n                <el-tag v-for=\"(item, i) in scope.row.attr_vals\" :key=\"i\" closable\r\n                @close=\"handleClose(i, scope.row)\">{{item}}</el-tag>\r\n                <!-- 输入文本框 -->\r\n                <el-input\r\n                  class=\"input-new-tag\"\r\n                  v-if=\"scope.row.inputVisible\"\r\n                  v-model=\"scope.row.inputValue\"\r\n                  ref=\"saveTagInput\"\r\n                  size=\"small\"\r\n                  @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                  @blur=\"handleInputConfirm(scope.row)\"\r\n                ></el-input>\r\n                <!-- 添加的按钮 -->\r\n                <el-button\r\n                  v-else\r\n                  class=\"button-new-tag\"\r\n                  size=\"small\"\r\n                  @click=\"showInput(scope.row)\"\r\n                >+ New Tag</el-button>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column type=\"index\"></el-table-column>\r\n            <el-table-column label=\"参数名称\" prop=\"attr_name\"></el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template v-slot=\"scope\">\r\n                <el-button\r\n                  type=\"primary\"\r\n                  size=\"mini\"\r\n                  icon=\"el-icon-edit\"\r\n                  @click=\"showEditDialog(scope.row.attr_id)\"\r\n                >编辑</el-button>\r\n                <el-button\r\n                  type=\"danger\"\r\n                  size=\"mini\"\r\n                  icon=\"el-icon-delete\"\r\n                  @click=\"removeParams(scope.row.attr_id)\"\r\n                >删除</el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n        <!-- 添加静态属性的面板 -->\r\n        <el-tab-pane label=\"静态属性\" name=\"only\">\r\n          <el-button type=\"primary\" :disabled=\"isBtnDisabled\" @click=\"addDialogVisible = true\">添加属性</el-button>\r\n          <!-- 静态参数表格 -->\r\n          <el-table :data=\"onlyTableData\" border stripe>\r\n            <el-table-column type=\"expand\">\r\n              <template v-slot=\"scope\">\r\n                <!-- 循环渲染tag标签 -->\r\n                <el-tag v-for=\"(item, i) in scope.row.attr_vals\" :key=\"i\" closable\r\n                @close=\"handleClose(i, scope.row)\">{{item}}</el-tag>\r\n                <!-- 输入文本框 -->\r\n                <el-input\r\n                  class=\"input-new-tag\"\r\n                  v-if=\"scope.row.inputVisible\"\r\n                  v-model=\"scope.row.inputValue\"\r\n                  ref=\"saveTagInput\"\r\n                  size=\"small\"\r\n                  @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                  @blur=\"handleInputConfirm(scope.row)\"\r\n                ></el-input>\r\n                <!-- 添加的按钮 -->\r\n                <el-button\r\n                  v-else\r\n                  class=\"button-new-tag\"\r\n                  size=\"small\"\r\n                  @click=\"showInput(scope.row)\"\r\n                >+ New Tag</el-button>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column type=\"index\"></el-table-column>\r\n            <el-table-column label=\"属性名称\" prop=\"attr_name\"></el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template v-slot=\"scope\">\r\n                <el-button\r\n                  type=\"primary\"\r\n                  size=\"mini\"\r\n                  icon=\"el-icon-edit\"\r\n                  @click=\"showEditDialog(scope.row.attr_id)\"\r\n                >编辑</el-button>\r\n                <el-button\r\n                  type=\"danger\"\r\n                  size=\"mini\"\r\n                  icon=\"el-icon-delete\"\r\n                  @click=\"removeParams(scope.row.attr_id)\"\r\n                >删除</el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n    </el-card>\r\n    <!-- 添加参数的对话框 -->\r\n    <el-dialog\r\n      :title=\"titleText\"\r\n      :visible.sync=\"addDialogVisible\"\r\n      width=\"30%\"\r\n      @close=\"addDialogClosed\"\r\n    >\r\n      <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"100px\">\r\n        <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n          <el-input v-model=\"addForm.attr_name\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addParams\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <el-dialog\r\n      :title=\"'修改'+titleText\"\r\n      :visible.sync=\"editDialogVisible\"\r\n      width=\"30%\"\r\n      @close=\"editDialogClosed\"\r\n    >\r\n      <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"100px\">\r\n        <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n          <el-input v-model=\"editForm.attr_name\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"editParams\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      catelist: [],\r\n      // 级联选择框绑定的数组\r\n      selectedCateKeys: [],\r\n      // 默认显示的页签名\r\n      activeName: 'many',\r\n      // 动态参数的数据\r\n      manyTableData: [],\r\n      // 静态属性的数据\r\n      onlyTableData: [],\r\n      // 控制添加对话框的显示与隐藏\r\n      addDialogVisible: false,\r\n      // 控制修改对话框的显示与隐藏\r\n      editDialogVisible: false,\r\n      // 控制按钮与文本框的切换显示\r\n      inputVisible: false,\r\n      // 控制文本框中输入的内容\r\n      inputValue: '',\r\n      // 添加参数的表单数据对象\r\n      addForm: {},\r\n      // 修改参数的表单数据对象\r\n      editForm: {},\r\n      // 添加表单的验证规则对象\r\n      addFormRules: {\r\n        attr_name: [\r\n          { required: true, message: '请输入参数名', trigger: 'blur' }\r\n        ]\r\n      },\r\n      // 修改表单的验证规则对象\r\n      editFormRules: {\r\n        attr_name: [\r\n          { required: true, message: '请输入参数名', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    // 获取所有的商品分类参数\r\n    this.getCateList()\r\n  },\r\n  methods: {\r\n    async getCateList() {\r\n      const { data: res } = await this.$http.get('/api/private/v1/categories')\r\n      if (res.meta.status !== 200) {\r\n        this.$message.error('获取分类信息失败')\r\n      }\r\n      this.catelist = res.data\r\n      console.log(this.catelist)\r\n    },\r\n    handleChange() {\r\n      this.getParamsData();\r\n    },\r\n    async getParamsData() {\r\n      // 如果选中的不是三级分类\r\n      if (this.selectedCateKeys.length !== 3) {\r\n        this.selectedCateKeys = [];\r\n        this.manyTableData = [];\r\n        this.onlyTableData = [];\r\n        return\r\n      }\r\n      // 根据所选分类的ID和当前所处的面板获取对应的参数\r\n      const {\r\n        data: res\r\n      } = await this.$http.get(\r\n        `/api/private/v1/categories/${this.cateId}/attributes`,\r\n        { params: { sel: this.activeName } }\r\n      )\r\n      if (res.meta.status !== 200) {\r\n        this.$message.error('获取参数列表失败')\r\n      }\r\n      res.data.forEach(item => {\r\n        item.attr_vals = item.attr_vals ? item.attr_vals.split(' ') : []\r\n        // 控制文本框的显示与隐藏\r\n        item.inputVisible = false\r\n        item.inputValue = ''\r\n      })\r\n      console.log(res.data)\r\n      if (this.activeName === 'many') {\r\n        this.manyTableData = res.data\r\n      } else {\r\n        this.onlyTableData = res.data\r\n      }\r\n    },\r\n    handleTabClick() {\r\n      this.getParamsData()\r\n    },\r\n    // 监听对话框的关闭事件\r\n    addDialogClosed() {\r\n      this.$refs.addFormRef.resetFields()\r\n    },\r\n    // 添加动态/静态参数\r\n    addParams() {\r\n      this.$refs.addFormRef.validate(async valid => {\r\n        if (!valid) {\r\n          return\r\n        }\r\n        // console.log(this.addForm.attr_name, this.activeName)\r\n        const {\r\n          data: res\r\n        } = await this.$http.post(\r\n          `/api/private/v1/categories/${this.cateId}/attributes`,\r\n          { attr_name: this.addForm.attr_name, attr_sel: this.activeName }\r\n        )\r\n        console.log(res.meta.status)\r\n        if (res.meta.status !== 201) {\r\n          return this.$message.error('获取参数信息失败')\r\n        }\r\n        this.$message.success('添加参数成功')\r\n        this.addDialogVisible = false\r\n        this.getParamsData()\r\n      })\r\n    },\r\n    // 展示修改参数的对话框\r\n    async showEditDialog(id) {\r\n      const {\r\n        data: res\r\n      } = await this.$http.get(\r\n        `/api/private/v1/categories/${this.cateId}/attributes/${id}`,\r\n        { attr_sel: this.activeName }\r\n      )\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('获取参数信息失败')\r\n      }\r\n      this.editForm = res.data\r\n      this.editDialogVisible = true\r\n    },\r\n    editDialogClosed() {\r\n      // 重置修改的表单\r\n      this.$refs.editFormRef.resetFields()\r\n    },\r\n    // 点击按钮修改\r\n    editParams() {\r\n      this.$refs.editFormRef.validate(async valid => {\r\n        if (!valid) return\r\n        const {\r\n          data: res\r\n        } = await this.$http.put(\r\n          `/api/private/v1/categories/${this.cateId}/attributes/${this.editForm.attr_id}`,\r\n          { attr_name: this.editForm.attr_name, attr_sel: this.activeName }\r\n        )\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error('修改参数失败!')\r\n        }\r\n        this.$message.success('修改参数成功！')\r\n        this.getParamsData()\r\n        this.editDialogVisible = false\r\n      })\r\n    },\r\n    // 根据id删除对应的参数项\r\n    async removeParams(id) {\r\n      const confirmResult = await this.$confirm(\r\n        '此操作将永久删除改文件，是否继续？',\r\n        '提示',\r\n        {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }\r\n      ).catch(err => err)\r\n      if (confirmResult !== 'confirm') {\r\n        return this.$message.info('已取消删除')\r\n      }\r\n      // 删除的业务逻辑\r\n      const { data: res } = await this.$http.delete(\r\n        `/api/private/v1/categories/${this.cateId}/attributes/${id}`\r\n      )\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('删除失败')\r\n      }\r\n\r\n      this.$message.success('删除参数成功')\r\n      this.getParamsData()\r\n    },\r\n    // 文本框失去焦点或按下了enter键\r\n    async handleInputConfirm(row) {\r\n      if (row.inputValue.trim().length === 0) {\r\n        row.inputValue = ''\r\n        row.inputVisible = false\r\n        return\r\n      }\r\n      // 如果没有return则做后续处理\r\n      row.attr_vals.push(row.inputValue.trim())\r\n      row.inputValue = ''\r\n      row.inputVisible = false\r\n      // 保存属性到后端数据库\r\n      this.saveAttrValues(row)\r\n    },\r\n    // 将对参数的操作保存到数据库\r\n    async saveAttrValues(row) {\r\n      // 发起请求\r\n      const { data: res } = await this.$http.put(\r\n        `/api/private/v1/categories/${this.cateId}/attributes/${row.attr_id}`,\r\n        { attr_name: row.attr_name, attr_sel: row.attr_sel, attr_vals: row.attr_vals.join(' ') }\r\n      )\r\n\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('修改参数项失败')\r\n      }\r\n      this.$message.success('修改参数项成功！')\r\n    },\r\n    showInput(row) {\r\n      row.inputVisible = true\r\n      this.$nextTick(_ => {\r\n        this.$refs.saveTagInput.$refs.input.focus()\r\n      })\r\n    },\r\n    handleClose(i, row) {\r\n      row.attr_vals.splice(i, 1)\r\n      this.saveAttrValues(row);\r\n    }\r\n  },\r\n  computed: {\r\n    // 如果按钮需要被禁用，则返回true，否则返回false\r\n    isBtnDisabled() {\r\n      if (this.selectedCateKeys.length !== 3) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n    // 当前选中的三级分类的id\r\n    cateId() {\r\n      if (this.selectedCateKeys.length === 3) {\r\n        return this.selectedCateKeys[2]\r\n      }\r\n      return null\r\n    },\r\n    // 动态计算标题的文本\r\n    titleText() {\r\n      if (this.activeName === 'many') {\r\n        return '动态参数'\r\n      } else {\r\n        return '静态属性'\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.el-tag {\r\n  margin-right: 20px;\r\n}\r\n.input-new-tag {\r\n  width: 120px;\r\n}\r\n</style>\r\n"]}]}